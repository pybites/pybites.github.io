<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyBites - Tips</title><link>https://pybit.es/</link><description>We Create Well-Rounded Python Developers</description><lastBuildDate>Thu, 24 Sep 2020 18:43:00 +0200</lastBuildDate><item><title>10 Things We Picked Up From Code Reviewing</title><link>https://pybit.es/code-reviewing.html</link><description>&lt;p&gt;Here are some things we picked up from code reviews that when addressed can make your code a lot cleaner.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Thu, 24 Sep 2020 18:43:00 +0200</pubDate><guid isPermaLink="false">tag:pybit.es,2020-09-24:/code-reviewing.html</guid><category>clean code</category><category>software development</category><category>best practices</category><category>software quality</category><category>code reviewing</category></item><item><title>There is More Than One Way to Solve a Bite Exercise</title><link>https://pybit.es/guest-solving-bites.html</link><description>&lt;p&gt;According to the &lt;a href="https://www.python.org/dev/peps/pep-0020/"&gt;Zen of Python&lt;/a&gt;, "There should be one-- and preferably only one --obvious way to do it." It's a good principle for designing a program: the more ways there are of doing something, the more confusing the software becomes, along with a host of other problems. In reality, though, there almost always is more than one way to accomplish something. The quotation even displays this fact: it places the dash in two different ways, neither of which are the obvious way.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Harrison Morgan</dc:creator><pubDate>Fri, 21 Aug 2020 10:37:00 +0200</pubDate><guid isPermaLink="false">tag:pybit.es,2020-08-21:/guest-solving-bites.html</guid><category>guest</category><category>pybites</category><category>platform</category><category>Bites of Py</category><category>Zen of Python</category><category>requests</category><category>BeautifulSoup</category><category>AST</category></item><item><title>Refactoring Opportunities That Will Boost the Quality of Your Code</title><link>https://pybit.es/refactoring-opportunities.html</link><description>&lt;p&gt;Refactoring is all about making your code more maintainable. In this article I will provide you with Python and generic software tips to write better code.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Sun, 19 Apr 2020 22:22:00 +0200</pubDate><guid isPermaLink="false">tag:pybit.es,2020-04-19:/refactoring-opportunities.html</guid><category>refactoring</category><category>code quality</category><category>loose coupling</category><category>McCabe</category><category>cyclomatic complexity</category><category>classes</category><category>functions</category><category>testing</category><category>Django</category><category>design patterns</category><category>DRY</category><category>OOP</category><category>decorators</category></item><item><title>There's no Wrong Way... to Eat a Bite of Py</title><link>https://pybit.es/guest-eat-a-bite-of-py.html</link><description>&lt;p&gt;There are many ways to tackle a Bites of Py exercise, try them all!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">AJ Kerrigan</dc:creator><pubDate>Wed, 27 Nov 2019 12:02:00 +0100</pubDate><guid isPermaLink="false">tag:pybit.es,2019-11-27:/guest-eat-a-bite-of-py.html</guid><category>guest</category><category>pybites</category><category>platform</category><category>REPL</category><category>virtualenv</category><category>learning</category><category>tips</category><category>editors</category><category>setup</category><category>ptpython</category><category>bpython</category><category>mutpy</category><category>Anaconda</category><category>iPad</category></item><item><title>How to Write a Decorator with an Optional Argument?</title><link>https://pybit.es/decorator-optional-argument.html</link><description>&lt;p&gt;When playing with decorators (&lt;a href="http://pybit.es/codechallenge14.html"&gt;this week's challenge&lt;/a&gt;) I got stuck: how do you write a decorator that takes an optional argument? &lt;a href="http://www.amazon.com/dp/1449340377/?tag=pyb0f-20"&gt;Python cookbook 3rd ed&lt;/a&gt; edition to the rescue. In this post how I failed my way to the right solution.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Tue, 11 Apr 2017 09:00:00 +0200</pubDate><guid isPermaLink="false">tag:pybit.es,2017-04-11:/decorator-optional-argument.html</guid><category>decorators</category><category>arguments</category><category>tricks</category><category>tips</category><category>cookbook</category></item><item><title>10 Tips to Get More out of Your Regexes</title><link>https://pybit.es/mastering-regex.html</link><description>&lt;p&gt;Regular expressions can be arcane, yet when used with care they can also be very powerful. In this post a couple of tips to get more out of your regexes when using Python's re module.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Wed, 15 Mar 2017 07:45:00 +0100</pubDate><guid isPermaLink="false">tag:pybit.es,2017-03-15:/mastering-regex.html</guid><category>regex</category><category>tips</category><category>parsing</category><category>regular expressions</category><category>findall</category></item><item><title>How to Order Dict Output in Python</title><link>https://pybit.es/dict-ordering.html</link><description>&lt;p&gt;Learn how to order the output of a Python Dict&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Julian</dc:creator><pubDate>Thu, 16 Feb 2017 23:00:00 +0100</pubDate><guid isPermaLink="false">tag:pybit.es,2017-02-16:/dict-ordering.html</guid><category>python</category><category>tips</category><category>tricks</category><category>code</category><category>pybites</category><category>dicts</category><category>data structures</category></item><item><title>Discover Python Help Options</title><link>https://pybit.es/python-help.html</link><description>&lt;p&gt;Discover some of the numerous Python Help functions.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Julian</dc:creator><pubDate>Thu, 02 Feb 2017 21:45:00 +0100</pubDate><guid isPermaLink="false">tag:pybit.es,2017-02-02:/python-help.html</guid><category>python</category><category>tips</category><category>tricks</category><category>code</category><category>pybites</category><category>help</category></item></channel></rss>