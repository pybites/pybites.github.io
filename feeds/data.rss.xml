<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyBites - Data</title><link>https://pybit.es/</link><description>We Create Well-Rounded Python Developers</description><lastBuildDate>Fri, 10 Apr 2020 22:55:00 +0200</lastBuildDate><item><title>Introduction to Building Custom Apache Airflow Operators</title><link>https://pybit.es/introduction-airflow.html</link><description>&lt;p&gt;If you work in data engineering, then the chance are high that you are using or have used Apache Airflow.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christo Olivier</dc:creator><pubDate>Fri, 10 Apr 2020 22:55:00 +0200</pubDate><guid isPermaLink="false">tag:pybit.es,2020-04-10:/introduction-airflow.html</guid><category>Apache</category><category>Airflow</category><category>data</category></item><item><title>Automating PyBites Review Post Using Github API and collections.defaultdict</title><link>https://pybit.es/github-api-collections-defaultdict.html</link><description>&lt;p&gt;In this post I share a quick script I produced last week to automate a portion of our review post. There are some nice idioms that you might find useful.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Tue, 13 Nov 2018 10:00:00 +0100</pubDate><guid isPermaLink="false">tag:pybit.es,2018-11-13:/github-api-collections-defaultdict.html</guid><category>collections</category><category>defaultdict</category><category>re</category><category>regular expressions</category><category>requests</category><category>challenges</category><category>review post</category><category>parsing</category><category>string manipulation</category><category>github</category><category>API</category></item><item><title>Data Analysis of Pybites Community Branch Activity</title><link>https://pybit.es/guest-challenge-repo-data-analysis.html</link><description>&lt;p&gt;I wanted to play around with a dataset and see what I could find out about it. I decided on analyzing the little bit of data that I could collect from Github without having to use an OAuth key, which limits it to just 300 events. If you want to follow along with my notebook check out the instructions &lt;a href="https://github.com/pybites/challenges/tree/community/47/clamytoe"&gt;here&lt;/a&gt;. This notebook was my submission for &lt;a href="https://codechalleng.es/challenges/47/"&gt;Code Challenge 47 - PyBites First Year in Data (Special)&lt;/a&gt;.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Uribe</dc:creator><pubDate>Thu, 18 Oct 2018 13:10:00 +0200</pubDate><guid isPermaLink="false">tag:pybit.es,2018-10-18:/guest-challenge-repo-data-analysis.html</guid><category>data analysis</category><category>community</category><category>matplotlib</category><category>seaborn</category><category>dateutil</category><category>pathlib</category><category>collections</category><category>json</category><category>code challenges</category><category>numpy</category><category>pandas</category><category>requests</category></item><item><title>Using Pandas and Seaborn to solve PyBites Marvel Challenge</title><link>https://pybit.es/guest-marvel-data-analysis.html</link><description>&lt;p&gt;Today we have Martin Smith show us how he used Pandas and Seaborn to solve &lt;a href="https://pybit.es/codechallenge44.html"&gt;our Marvel Comics Challenge&lt;/a&gt;. Take it away Martin!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Smith</dc:creator><pubDate>Thu, 07 Dec 2017 11:50:00 +0100</pubDate><guid isPermaLink="false">tag:pybit.es,2017-12-07:/guest-marvel-data-analysis.html</guid><category>Pandas</category><category>Seaborn</category><category>data analysis</category><category>Marvel</category><category>Comicsm</category><category>challenge</category><category>guest</category></item><item><title>Visualizing website and social media metrics with matplotlib [notebook]</title><link>https://pybit.es/matplotlib-starter.html</link><description>&lt;p&gt;in &lt;a href="https://github.com/pybites/pybites.github.io-src/blob/master/content/matplotlib-starter.ipynb"&gt;this notebook&lt;/a&gt; i use matplotlib.pyplot to create simple yet powerful visualizations of pybites twitter activity, our blog's tag usage and our website traffic. Lastly I use Google trends to see popularity of various social media.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Wed, 08 Feb 2017 09:00:00 +0100</pubDate><guid isPermaLink="false">tag:pybit.es,2017-02-08:/matplotlib-starter.html</guid><category>matplotlib</category><category>visualization</category><category>histogram</category><category>jupyter</category><category>data analysis</category><category>data science</category><category>socialmedia</category><category>googletrends</category></item><item><title>Read the stdlib: deque</title><link>https://pybit.es/collections-deque.html</link><description>&lt;p&gt;Use collections.deque to rotate letters in string (or elements in list). It has a native method which performs faster too.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Wed, 21 Dec 2016 00:05:00 +0100</pubDate><guid isPermaLink="false">tag:pybit.es,2016-12-21:/collections-deque.html</guid><category>collections</category><category>data structures</category><category>performance</category><category>stdlib</category><category>deque</category></item></channel></rss>